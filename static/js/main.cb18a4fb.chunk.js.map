{"version":3,"sources":["assets/nba-logoman-word-white.svg","../node_modules/encoding/lib sync","components/TopNavBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","TopNavBar","className","href","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","this","props","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","CountSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","pull","min","max","style","marginTop","placeholder","RadioGroup","Radio","Group","DataViewContainer","count","onChartTypeChange","console","log","target","onTooltipChange","checkedChildren","unCheckedChildren","defaultChecked","_","debounce","PROFILE_PIC_URL_PREFIX","Profile","playerInfo","teamAbbreviation","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","fullName","key","onSelect","loadPlayerInfo","size","onSearch","optionLabelProp","suffix","type","Main","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cb18a4fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 263;","import React from 'react';\nimport logo from '../assets/nba-logoman-word-white.svg';\n\nexport class TopNavBar extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\t\n                <a href=\"https://www.nba.com\">\n                \t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <span className=\"text\">Player Stats Center</span>\n            </header>\n        );\n    }\n}","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n    static propTypes = {\n        playerId: PropTypes.number,\n        minCount: PropTypes.number,\n        chartType: PropTypes.string,\n        displayTooltip: PropTypes.bool,\n    }\n\n    componentDidUpdate() {\n        nba.stats.shots({\n            PlayerID: this.props.playerId\n        }).then((response) => {\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }));\n\n            const courtSelection = d3.select(\"#shot-chart\");\n            courtSelection.html('');\n            const chart_court = court().width(500);\n            const chart_shots = shots()\n                .shotRenderThreshold(this.props.minCount)\n                .displayToolTips(this.props.displayTooltip)\n                .displayType(this.props.chartType);\n            courtSelection.call(chart_court);\n            courtSelection.datum(final_shots).call(chart_shots);\n        });\n    }\n    render() {\n        return (\n            <div id=\"shot-chart\"></div>\n        );\n    }\n}\n","import React from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n    state = {\n        inputValue: this.props.value\n    }\n\n    onChange = (value) => {\n        const cleanValue = Number(value) ? value: this.state.inputValue;\n        this.setState({\n            inputValue: cleanValue,\n        });\n        this.props.onCountSliderChange(cleanValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col span={16} pull={1}>\n                        Slide/click below to adjust minimal FGA on the chart. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={12}>\n                        <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\n                    </Col>\n                    <Col span={4}>\n                        <InputNumber\n                            min={1}\n                            max={20}\n                            style={{ marginLeft: 16 }, {marginTop: 6}}\n                            value={this.state.inputValue}\n                            onChange={this.onChange}\n                            placeholder=\"min freq.\"\n                        />\n                    </Col>\n                </Row> \n            </div>\n            \n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { ShotChart } from './ShotChart';\nimport { CountSlider } from './CountSlider';\nimport { Radio, Row, Col, Switch } from 'antd';\n\nconst RadioGroup = Radio.Group;\n\nexport class DataViewContainer extends React.Component {\n    state = {\n        minCount: 1,\n        chartType: 'hexbin',\n        displayTooltip: true,\n    }\n\n    onCountSliderChange = (count) => {\n        this.setState({ minCount: count });\n    }\n\n    onChartTypeChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ chartType: e.target.value });\n    }\n\n    onTooltipChange = (displayTooltip) => {\n        console.log(displayTooltip);\n        this.setState({ displayTooltip });\n    }\n\n    render() {\n        console.log('render');\n        return (\n            <div className=\"data-view\">\n                <ShotChart\n                    playerId={this.props.playerId}\n                    minCount={this.state.minCount}\n                    chartType={this.state.chartType}\n                    displayTooltip={this.state.displayTooltip}\n                />\n\n                \n                \n                <div className=\"filters\">\n                    <Row className=\"tooltip\">\n                        <Col span={2}>\n                            <Switch\n                                checkedChildren=\"On\"\n                                unCheckedChildren=\"Off\"\n                                onChange={this.onTooltipChange}\n                                defaultChecked />\n                        </Col>\n\n                        <Col span={16}>\n                            <div>Tool Tip: Switch on and move mouse to see FGP on each spot.</div>\n                        </Col>\n                    </Row>\n\n\n                    {this.state.chartType === 'hexbin' ?\n                        <CountSlider value={this.state.minCount}\n                                     onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}/> : null}\n                    <Row>\n\n                        \n\n                        <Col span={14}>\n                            <RadioGroup onChange={this.onChartTypeChange} value={this.state.chartType}>\n                                <Radio value=\"hexbin\">Hexbin</Radio>\n                                <Radio value=\"scatter\">Scatter</Radio>\n                            </RadioGroup>\n                        </Col>\n                        \n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\n","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\nexport class Profile extends React.Component {\n    render() {\n        const {\n            teamAbbreviation,\n            teamCity,\n            teamName,\n            playerName,\n            height,\n            weight,\n            playerId,\n            pts, reb, ast, pie,\n        } = this.props.playerInfo;\n        return (\n            <div className=\"profile\">\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n                <img\n                    className=\"profile-pic\"\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                    alt=\"Profile\"\n                />\n                <div className=\"team\">&nbsp;&nbsp;{`${teamCity} ${teamName}`}</div>\n                <img\n                    className=\"team-logo\"\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n                    alt=\"Team\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Height: </div>\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Weight:</div>\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PTS: </div>\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">REB: </div>\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">AST: </div>\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PIE: </div>\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from 'nba'\nimport {PROFILE_PIC_URL_PREFIX} from '../constants'\n\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n    state = {\n        dataSource: [],\n    }\n\n    handleSearch = (value) => {\n        this.setState({\n            dataSource: !value ? [] : nba.searchPlayers(value).map(\n                ({fullName, playerId}) => (<Option key={playerId} value={fullName}>\n                    <img\n                        className=\"player-option-image\"\n                        src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                        alt=\"Profile\"\n                    />\n                    <span className=\"player-option-label\"> {fullName} </span>\n                    </Option>)\n    )\n    });\n    }\n\n    onSelect = (value) => {\n        console.log('onSelect', value);\n        this.props.loadPlayerInfo(value);\n\n    }\n\n    render () {\n        const { dataSource } = this.state;\n        return (\n            <AutoComplete\n                className='search-bar'\n                dataSource={dataSource}\n                style={{ width: '100%' }}\n                size=\"large\"\n                onSelect={this.onSelect}\n                onSearch={this.handleSearch}\n                placeholder=\"Type to find the stats of your fav NBA player!\"\n                optionLabelProp=\"value\"\n            >\n\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n            </AutoComplete>\n        );\n    }\n}","import React from 'react';\nimport { DataViewContainer } from './DataViewContainer';\nimport nba from 'nba'\nimport { Profile } from './Profile';\nimport { SearchBar } from './SearchBar'\n\n\nexport class Main extends React.Component {\n    state = {\n        playerInfo: {\n            playerId: nba.findPlayer('LeBron James').playerId,\n        }\n    }\n\n    componentDidMount() {\n        this.loadPlayerInfo('LeBron James');\n    }\n\n    loadPlayerInfo = (playerName) => {\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n            console.log(info);\n            const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n            console.log(playerInfo);\n            this.setState({ playerInfo });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <SearchBar loadPlayerInfo={this.loadPlayerInfo}/>\n                <div className=\"player\">\n                    <Profile playerInfo={this.state.playerInfo}/>\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport { TopNavBar } from './TopNavBar';\nimport  { Main } from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopNavBar/>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}